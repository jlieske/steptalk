{
    categories = {
	NSBundle = {
	    STAdditions = STBundleInfo;
	};
	NSInvocation = {
	    STAdditions = "NSInvocation+additions";
	};
	NSObject = {
	    STAdditions = "NSObject+additions";
	    STScripting = STScripting;
	};
    };
    category = {
	"NSBundle(STAdditions)" = STBundleInfo;
	"NSInvocation(STAdditions)" = "NSInvocation+additions";
	"NSObject(STAdditions)" = "NSObject+additions";
	"NSObject(STScripting)" = STScripting;
    };
    class = {
	STBundleInfo = STBundleInfo;
	STConversation = STConversation;
	STEngine = STEngine;
	STEnvironment = STEnvironment;
	STFileScript = STFileScript;
	STLanguage = STLanguage;
	STMethod = STMethod;
	STObjectReference = STObjectReference;
	STScript = STScript;
	STScriptObject = STScriptObject;
	STScriptsManager = STScriptsManager;
	STSelector = STSelector;
	STUndefinedObject = STUndefinedObject;
    };
    function = {
	STAllObjectiveCClasses = STObjCRuntime;
	STAllObjectiveCSelectors = STObjCRuntime;
	STClassDictionaryWithNames = STObjCRuntime;
	STFindAllResources = STFunctions;
	STFindResource = STFunctions;
	STGetFoundationConstants = STObjCRuntime;
	STGetValueOfTypeFromObject = "NSInvocation+additions";
	STMethodSignatureForSelector = STObjCRuntime;
	STObjectFromValueOfType = "NSInvocation+additions";
	STSelectorFromString = STObjCRuntime;
	STSelectorFromValue = STObjCRuntime;
	STUserConfigPath = STFunctions;
	STValueFromSelector = STObjCRuntime;
    };
    method = {
	"+allFrameworkNames" = {
	    NSBundle = STBundleInfo;
	};
	"+allKnownFileTypes" = {
	    STLanguage = STLanguage;
	};
	"+allLanguageNames" = {
	    STLanguage = STLanguage;
	};
	"+bundleForFrameworkWithName:" = {
	    NSBundle = STBundleInfo;
	};
	"+classForScripting" = {
	    "(STScripting)" = STScripting;
	};
	"+className" = {
	    "(STScripting)" = STScripting;
	};
	"+conversationWithEnvironment:language:" = {
	    STConversation = STConversation;
	};
	"+defaultLanguageName" = {
	    STLanguage = STLanguage;
	};
	"+defaultManager" = {
	    STScriptsManager = STScriptsManager;
	};
	"+defaultScriptingEnvironment" = {
	    STEnvironment = STEnvironment;
	};
	"+engineForFileType:" = {
	    STEngine = STEngine;
	};
	"+engineForLanguageWithName:" = {
	    STEngine = STEngine;
	};
	"+environmentWithDefaultDescription" = {
	    STEnvironment = STEnvironment;
	};
	"+environmentWithDescription:" = {
	    STEnvironment = STEnvironment;
	};
	"+environmentWithDescriptionName:" = {
	    STEnvironment = STEnvironment;
	};
	"+infoForBundle:" = {
	    STBundleInfo = STBundleInfo;
	};
	"+invocationWithTarget:selector:" = {
	    NSInvocation = "NSInvocation+additions";
	};
	"+invocationWithTarget:selectorName:" = {
	    NSInvocation = "NSInvocation+additions";
	};
	"+isClass" = {
	    "(STScripting)" = STScripting;
	};
	"+languageForFileType:" = {
	    STLanguage = STLanguage;
	};
	"+languageNameForFileType:" = {
	    STLanguage = STLanguage;
	};
	"+languageWithName:" = {
	    STLanguage = STLanguage;
	};
	"+languageWithPath:" = {
	    STLanguage = STLanguage;
	};
	"+pathForFrameworkWithName:" = {
	    NSBundle = STBundleInfo;
	};
	"+scriptObject" = {
	    STScriptObject = STScriptObject;
	};
	"+scriptWithFile:" = {
	    STFileScript = STFileScript;
	    STScript = STScript;
	};
	"+scriptWithSource:language:" = {
	    STScript = STScript;
	};
	"+sharedEnvironment" = {
	    STEnvironment = STEnvironment;
	};
	"+stepTalkBundleNames" = {
	    NSBundle = STBundleInfo;
	};
	"+stepTalkBundleWithName:" = {
	    NSBundle = STBundleInfo;
	};
	"-addClassesWithNames:" = {
	    STEnvironment = STEnvironment;
	};
	"-addMethod:" = {
	    STScriptObject = STScriptObject;
	};
	"-addNamedObjectsFromDictionary:" = {
	    STEnvironment = STEnvironment;
	};
	"-allClassNames" = {
	    STBundleInfo = STBundleInfo;
	};
	"-allScripts" = {
	    STScriptsManager = STScriptsManager;
	};
	"-classForScripting" = {
	    "(STScripting)" = STScripting;
	};
	"-className" = {
	    "(STScripting)" = STScripting;
	};
	"-compareByLocalizedName:" = {
	    STFileScript = STFileScript;
	    STScript = STScript;
	};
	"-createsUnknownObjects" = {
	    STEnvironment = STEnvironment;
	};
	"-defaultEnvironment" = {
	    STEngine = STEngine;
	};
	"-engine" = {
	    STLanguage = STLanguage;
	};
	"-environment" = {
	    STConversation = STConversation;
	    STScriptObject = STScriptObject;
	};
	"-executeCode:" = {
	    STEngine = STEngine;
	};
	"-executeCode:inEnvironment:" = {
	    STEngine = STEngine;
	};
	"-executeMethod:forReceiver:withArguments:inEnvironment:" = {
	    STEngine = STEngine;
	};
	"-executeMethod:forScriptObject:" = {
	    STEngine = STEngine;
	};
	"-fileName" = {
	    STFileScript = STFileScript;
	    STScript = STScript;
	};
	"-fullScriptingEnabled" = {
	    STEnvironment = STEnvironment;
	};
	"-getArgumentAsObjectAtIndex:" = {
	    NSInvocation = "NSInvocation+additions";
	};
	"-includeBundle:" = {
	    STEnvironment = STEnvironment;
	};
	"-includeFramework:" = {
	    STEnvironment = STEnvironment;
	};
	"-initDefault" = {
	    STEnvironment = STEnvironment;
	};
	"-initWithBundle:" = {
	    STBundleInfo = STBundleInfo;
	};
	"-initWithDefaultDescription" = {
	    STEnvironment = STEnvironment;
	};
	"-initWithDescription:" = {
	    STEnvironment = STEnvironment;
	};
	"-initWithDescriptionName:" = {
	    STEnvironment = STEnvironment;
	};
	"-initWithDomainName:" = {
	    STScriptsManager = STScriptsManager;
	};
	"-initWithEnvironment:language:" = {
	    STConversation = STConversation;
	};
	"-initWithFile:" = {
	    STFileScript = STFileScript;
	    STScript = STScript;
	};
	"-initWithInstanceVariableNames:" = {
	    STScriptObject = STScriptObject;
	};
	"-initWithName:" = {
	    STSelector = STSelector;
	};
	"-initWithObjectName:pool:" = {
	    STObjectReference = STObjectReference;
	};
	"-initWithSelector:" = {
	    STSelector = STSelector;
	};
	"-initWithSource:language:" = {
	    STScript = STScript;
	};
	"-instanceVariableNames" = {
	    "(STScriptObject)" = STScriptObject;
	    STScriptObject = STScriptObject;
	};
	"-isClass" = {
	    "(STScripting)" = STScripting;
	};
	"-isNil" = {
	    NSObject = "NSObject+additions";
	};
	"-isSame:" = {
	    NSObject = "NSObject+additions";
	};
	"-knownObjectNames" = {
	    STEnvironment = STEnvironment;
	};
	"-language" = {
	    STConversation = STConversation;
	    STScript = STScript;
	};
	"-languageName" = {
	    "(STMethod)" = STMethod;
	    STLanguage = STLanguage;
	    STMethod = STMethod;
	};
	"-loadModule:" = {
	    STEnvironment = STEnvironment;
	};
	"-localizedName" = {
	    STFileScript = STFileScript;
	    STScript = STScript;
	};
	"-methodDictionary" = {
	    STScriptObject = STScriptObject;
	};
	"-methodFromSource:forReceiver:inEnvironment:" = {
	    STEngine = STEngine;
	};
	"-methodFromSource:forScriptObject:" = {
	    STEngine = STEngine;
	};
	"-methodName" = {
	    "(STMethod)" = STMethod;
	    STMethod = STMethod;
	};
	"-methodNames" = {
	    STScriptObject = STScriptObject;
	};
	"-methodWithName:" = {
	    STScriptObject = STScriptObject;
	};
	"-namedObjects" = {
	    STBundleInfo = STBundleInfo;
	};
	"-notNil" = {
	    NSObject = "NSObject+additions";
	};
	"-object" = {
	    STObjectReference = STObjectReference;
	};
	"-objectDictionary" = {
	    STEnvironment = STEnvironment;
	};
	"-objectForVariable:" = {
	    STScriptObject = STScriptObject;
	};
	"-objectName" = {
	    STObjectReference = STObjectReference;
	};
	"-objectReferenceDictionary" = {
	    STBundleInfo = STBundleInfo;
	};
	"-objectReferenceForObjectWithName:" = {
	    STEnvironment = STEnvironment;
	};
	"-objectWithName:" = {
	    STEnvironment = STEnvironment;
	};
	"-pool" = {
	    STObjectReference = STObjectReference;
	};
	"-publicClassNames" = {
	    STBundleInfo = STBundleInfo;
	};
	"-registerObjectFinder:name:" = {
	    STEnvironment = STEnvironment;
	};
	"-registerObjectFinderNamed:" = {
	    STEnvironment = STEnvironment;
	};
	"-removeMethod:" = {
	    STScriptObject = STScriptObject;
	};
	"-removeMethodWithName:" = {
	    STScriptObject = STScriptObject;
	};
	"-removeObjectFinderWithName:" = {
	    STEnvironment = STEnvironment;
	};
	"-removeObjectWithName:" = {
	    STEnvironment = STEnvironment;
	};
	"-returnValueAsObject" = {
	    NSInvocation = "NSInvocation+additions";
	};
	"-runScriptFromString:" = {
	    STConversation = STConversation;
	};
	"-scriptDescription" = {
	    STFileScript = STFileScript;
	    STScript = STScript;
	};
	"-scriptName" = {
	    STFileScript = STFileScript;
	    STScript = STScript;
	};
	"-scriptSearchPaths" = {
	    STScriptsManager = STScriptsManager;
	};
	"-scriptWithName:" = {
	    STScriptsManager = STScriptsManager;
	};
	"-scriptingInfoDictionary" = {
	    NSBundle = STBundleInfo;
	};
	"-scriptsDomainName" = {
	    STScriptsManager = STScriptsManager;
	};
	"-selectorName" = {
	    STSelector = STSelector;
	};
	"-selectorValue" = {
	    STSelector = STSelector;
	};
	"-setArgumentAsObject:atIndex:" = {
	    NSInvocation = "NSInvocation+additions";
	};
	"-setCreatesUnknownObjects:" = {
	    STEnvironment = STEnvironment;
	};
	"-setDefaultEnvironment:" = {
	    STEngine = STEngine;
	};
	"-setEnvironment:" = {
	    STScriptObject = STScriptObject;
	};
	"-setFullScriptingEnabled:" = {
	    STEnvironment = STEnvironment;
	};
	"-setLanguage:" = {
	    STConversation = STConversation;
	    STScript = STScript;
	};
	"-setObject:" = {
	    STObjectReference = STObjectReference;
	};
	"-setObject:forName:" = {
	    STEnvironment = STEnvironment;
	};
	"-setObject:forVariable:" = {
	    STScriptObject = STScriptObject;
	};
	"-setObjectName:" = {
	    STObjectReference = STObjectReference;
	};
	"-setPool:" = {
	    STObjectReference = STObjectReference;
	};
	"-setScriptSearchPaths:" = {
	    STScriptsManager = STScriptsManager;
	};
	"-setScriptSearchPathsToDefaults" = {
	    STScriptsManager = STScriptsManager;
	};
	"-setSource:" = {
	    STScript = STScript;
	};
	"-setValue:forOption:" = {
	    STEngine = STEngine;
	};
	"-source" = {
	    "(STMethod)" = STMethod;
	    STMethod = STMethod;
	    STScript = STScript;
	};
	"-stringValue" = {
	    STSelector = STSelector;
	};
	"-translateSelector:forReceiver:" = {
	    STEnvironment = STEnvironment;
	};
	"-understandsCode:" = {
	    STEngine = STEngine;
	};
	"-validScriptSearchPaths" = {
	    STScriptsManager = STScriptsManager;
	};
	"-valueForOption:" = {
	    STEngine = STEngine;
	};
    };
    output = {
	"Headers/StepTalk/NSInvocation+additions.h" = (
	    "../Documentation/Reference/NSInvocation+additions.gsdoc"
	);
	"Headers/StepTalk/NSObject+additions.h" = (
	    "../Documentation/Reference/NSObject+additions.gsdoc"
	);
	Headers/StepTalk/STBundleInfo.h = (
	    ../Documentation/Reference/STBundleInfo.gsdoc
	);
	Headers/StepTalk/STEngine.h = (
	    ../Documentation/Reference/STEngine.gsdoc
	);
	Headers/StepTalk/STEnvironment.h = (
	    ../Documentation/Reference/STEnvironment.gsdoc
	);
	Headers/StepTalk/STExterns.h = (
	    ../Documentation/Reference/STExterns.gsdoc
	);
	Headers/StepTalk/STFunctions.h = (
	    ../Documentation/Reference/STFunctions.gsdoc
	);
	Headers/StepTalk/STLanguage.h = (
	    ../Documentation/Reference/STLanguage.gsdoc
	);
	Headers/StepTalk/STMethod.h = (
	    ../Documentation/Reference/STMethod.gsdoc
	);
	Headers/StepTalk/STObjCRuntime.h = (
	    ../Documentation/Reference/STObjCRuntime.gsdoc
	);
	Headers/StepTalk/STObjectReference.h = (
	    ../Documentation/Reference/STObjectReference.gsdoc
	);
	Headers/StepTalk/STScript.h = (
	    ../Documentation/Reference/STScript.gsdoc
	);
	Headers/StepTalk/STScriptObject.h = (
	    ../Documentation/Reference/STScriptObject.gsdoc
	);
	Headers/StepTalk/STScripting.h = (
	    ../Documentation/Reference/STScripting.gsdoc
	);
	Headers/StepTalk/STScriptsManager.h = (
	    ../Documentation/Reference/STScriptsManager.gsdoc
	);
	Headers/StepTalk/STSelector.h = (
	    ../Documentation/Reference/STSelector.gsdoc
	);
	Headers/StepTalk/STUndefinedObject.h = (
	    ../Documentation/Reference/STUndefinedObject.gsdoc
	);
	"NSInvocation+additions.h" = (
	    "../../Documentation/Reference/NSInvocation+additions.gsdoc"
	);
	"NSObject+additions.h" = (
	    "../../Documentation/Reference/NSObject+additions.gsdoc"
	);
	STBundleInfo.h = (
	    ../../Documentation/Reference/STBundleInfo.gsdoc
	);
	STConversation.h = (
	    ../../Documentation/Reference/STConversation.gsdoc
	);
	STEngine.h = (
	    ../../Documentation/Reference/STEngine.gsdoc
	);
	STEnvironment.h = (
	    ../../Documentation/Reference/STEnvironment.gsdoc
	);
	STExterns.h = (
	    ../../Documentation/Reference/STExterns.gsdoc
	);
	STFileScript.h = (
	    ../../Documentation/Reference/STFileScript.gsdoc
	);
	STFunctions.h = (
	    ../../Documentation/Reference/STFunctions.gsdoc
	);
	STLanguage.h = (
	    ../../Documentation/Reference/STLanguage.gsdoc
	);
	STMethod.h = (
	    ../../Documentation/Reference/STMethod.gsdoc
	);
	STObjCRuntime.h = (
	    ../../Documentation/Reference/STObjCRuntime.gsdoc
	);
	STObjectReference.h = (
	    ../../Documentation/Reference/STObjectReference.gsdoc
	);
	STScript.h = (
	    ../../Documentation/Reference/STScript.gsdoc
	);
	STScriptObject.h = (
	    ../../Documentation/Reference/STScriptObject.gsdoc
	);
	STScripting.h = (
	    ../../Documentation/Reference/STScripting.gsdoc
	);
	STScriptsManager.h = (
	    ../../Documentation/Reference/STScriptsManager.gsdoc
	);
	STSelector.h = (
	    ../../Documentation/Reference/STSelector.gsdoc
	);
	STUndefinedObject.h = (
	    ../../Documentation/Reference/STUndefinedObject.gsdoc
	);
    };
    protocol = {
	"(STMethod)" = STMethod;
	"(STScriptObject)" = STScriptObject;
	"(STScripting)" = STScripting;
    };
    source = {
	"Headers/StepTalk/NSInvocation+additions.h" = (
	    "NSInvocation+additions.m"
	);
	"Headers/StepTalk/NSObject+additions.h" = (
	    "NSObject+additions.m"
	);
	Headers/StepTalk/STBundleInfo.h = (
	    STBundleInfo.m
	);
	Headers/StepTalk/STEngine.h = (
	    STEngine.m
	);
	Headers/StepTalk/STEnvironment.h = (
	    STEnvironment.m
	);
	Headers/StepTalk/STExterns.h = (
	    STExterns.m
	);
	Headers/StepTalk/STFunctions.h = (
	    STFunctions.m
	);
	Headers/StepTalk/STLanguage.h = (
	    STLanguage.m
	);
	Headers/StepTalk/STMethod.h = (
	    STMethod.m
	);
	Headers/StepTalk/STObjCRuntime.h = (
	    STObjCRuntime.m
	);
	Headers/StepTalk/STObjectReference.h = (
	    STObjectReference.m
	);
	Headers/StepTalk/STScript.h = (
	    STScript.m
	);
	Headers/StepTalk/STScriptObject.h = (
	    STScriptObject.m
	);
	Headers/StepTalk/STScripting.h = (
	    STScripting.m
	);
	Headers/StepTalk/STScriptsManager.h = (
	    STScriptsManager.m
	);
	Headers/StepTalk/STSelector.h = (
	    STSelector.m
	);
	Headers/StepTalk/STUndefinedObject.h = (
	    STUndefinedObject.m
	);
	"NSInvocation+additions.h" = (
	    "NSInvocation+additions.m"
	);
	"NSObject+additions.h" = (
	    "NSObject+additions.m"
	);
	STBundleInfo.h = (
	    STBundleInfo.m
	);
	STConversation.h = (
	    STConversation.m
	);
	STEngine.h = (
	    STEngine.m
	);
	STEnvironment.h = (
	    STEnvironment.m
	);
	STExterns.h = (
	    STExterns.m
	);
	STFileScript.h = (
	    STFileScript.m
	);
	STFunctions.h = (
	    STFunctions.m
	);
	STLanguage.h = (
	    STLanguage.m
	);
	STMethod.h = (
	    STMethod.m
	);
	STObjCRuntime.h = (
	    STObjCRuntime.m
	);
	STObjectReference.h = (
	    STObjectReference.m
	);
	STScript.h = (
	    STScript.m
	);
	STScriptObject.h = (
	    STScriptObject.m
	);
	STScripting.h = (
	    STScripting.m
	);
	STScriptsManager.h = (
	    STScriptsManager.m
	);
	STSelector.h = (
	    STSelector.m
	);
	STUndefinedObject.h = (
	    STUndefinedObject.m
	);
    };
    super = {
	STBundleInfo = NSObject;
	STConversation = NSObject;
	STEngine = NSObject;
	STEnvironment = NSObject;
	STFileScript = STScript;
	STLanguage = NSBundle;
	STMethod = NSObject;
	STObjectReference = NSObject;
	STScript = NSObject;
	STScriptObject = NSObject;
	STScriptsManager = NSObject;
	STSelector = NSObject;
	STUndefinedObject = NSObject;
    };
    title = {
	"NSInvocation+additions" = "NSInvocation class additions";
	"NSObject+additions" = "NSObject+additions autogsdoc generated documentation";
	STBundleInfo = "STBundleInfo class documentation";
	STConversation = "STConversation class documentation";
	STEngine = "STEngine class documentation";
	STEnvironment = "STEnvironment class reference";
	STExterns = "STExterns autogsdoc generated documentation";
	STFileScript = "STFileScript class documentation";
	STFunctions = "STFunctions autogsdoc generated documentation";
	STLanguage = "STLanguage class documentation";
	STMethod = "STMethod autogsdoc generated documentation";
	STObjCRuntime = "STObjCRuntime autogsdoc generated documentation";
	STObjectReference = "STObjectReference class documentation";
	STScript = "STScript class documentation";
	STScriptObject = "STScriptObject class documentation";
	STScripting = "STScripting protocol documentation";
	STScriptsManager = "STScriptsManager class documentation";
	STSelector = "STSelector class documentation";
	STUndefinedObject = "STUndefinedObject class documentation";
	StepTalk = "StepTalk Documentation";
    };
    unitmethods = {
	"(STMethod)" = {
	    "-languageName" = STMethod;
	    "-methodName" = STMethod;
	    "-source" = STMethod;
	};
	"(STScriptObject)" = {
	    "-instanceVariableNames" = STScriptObject;
	};
	"(STScripting)" = {
	    "+classForScripting" = STScripting;
	    "+className" = STScripting;
	    "+isClass" = STScripting;
	    "-classForScripting" = STScripting;
	    "-className" = STScripting;
	    "-isClass" = STScripting;
	};
	"NSBundle(STAdditions)" = {
	    "+allFrameworkNames" = STBundleInfo;
	    "+bundleForFrameworkWithName:" = STBundleInfo;
	    "+pathForFrameworkWithName:" = STBundleInfo;
	    "+stepTalkBundleNames" = STBundleInfo;
	    "+stepTalkBundleWithName:" = STBundleInfo;
	    "-scriptingInfoDictionary" = STBundleInfo;
	};
	"NSInvocation(STAdditions)" = {
	    "+invocationWithTarget:selector:" = "NSInvocation+additions";
	    "+invocationWithTarget:selectorName:" = "NSInvocation+additions";
	    "-getArgumentAsObjectAtIndex:" = "NSInvocation+additions";
	    "-returnValueAsObject" = "NSInvocation+additions";
	    "-setArgumentAsObject:atIndex:" = "NSInvocation+additions";
	};
	"NSObject(STAdditions)" = {
	    "-isNil" = "NSObject+additions";
	    "-isSame:" = "NSObject+additions";
	    "-notNil" = "NSObject+additions";
	};
	STBundleInfo = {
	    "+infoForBundle:" = STBundleInfo;
	    "-allClassNames" = STBundleInfo;
	    "-initWithBundle:" = STBundleInfo;
	    "-namedObjects" = STBundleInfo;
	    "-objectReferenceDictionary" = STBundleInfo;
	    "-publicClassNames" = STBundleInfo;
	};
	STConversation = {
	    "+conversationWithEnvironment:language:" = STConversation;
	    "-environment" = STConversation;
	    "-initWithEnvironment:language:" = STConversation;
	    "-language" = STConversation;
	    "-runScriptFromString:" = STConversation;
	    "-setLanguage:" = STConversation;
	};
	STEngine = {
	    "+engineForFileType:" = STEngine;
	    "+engineForLanguageWithName:" = STEngine;
	    "-defaultEnvironment" = STEngine;
	    "-executeCode:" = STEngine;
	    "-executeCode:inEnvironment:" = STEngine;
	    "-executeMethod:forReceiver:withArguments:inEnvironment:" = STEngine;
	    "-executeMethod:forScriptObject:" = STEngine;
	    "-methodFromSource:forReceiver:inEnvironment:" = STEngine;
	    "-methodFromSource:forScriptObject:" = STEngine;
	    "-setDefaultEnvironment:" = STEngine;
	    "-setValue:forOption:" = STEngine;
	    "-understandsCode:" = STEngine;
	    "-valueForOption:" = STEngine;
	};
	STEnvironment = {
	    "+defaultScriptingEnvironment" = STEnvironment;
	    "+environmentWithDefaultDescription" = STEnvironment;
	    "+environmentWithDescription:" = STEnvironment;
	    "+environmentWithDescriptionName:" = STEnvironment;
	    "+sharedEnvironment" = STEnvironment;
	    "-addClassesWithNames:" = STEnvironment;
	    "-addNamedObjectsFromDictionary:" = STEnvironment;
	    "-createsUnknownObjects" = STEnvironment;
	    "-fullScriptingEnabled" = STEnvironment;
	    "-includeBundle:" = STEnvironment;
	    "-includeFramework:" = STEnvironment;
	    "-initDefault" = STEnvironment;
	    "-initWithDefaultDescription" = STEnvironment;
	    "-initWithDescription:" = STEnvironment;
	    "-initWithDescriptionName:" = STEnvironment;
	    "-knownObjectNames" = STEnvironment;
	    "-loadModule:" = STEnvironment;
	    "-objectDictionary" = STEnvironment;
	    "-objectReferenceForObjectWithName:" = STEnvironment;
	    "-objectWithName:" = STEnvironment;
	    "-registerObjectFinder:name:" = STEnvironment;
	    "-registerObjectFinderNamed:" = STEnvironment;
	    "-removeObjectFinderWithName:" = STEnvironment;
	    "-removeObjectWithName:" = STEnvironment;
	    "-setCreatesUnknownObjects:" = STEnvironment;
	    "-setFullScriptingEnabled:" = STEnvironment;
	    "-setObject:forName:" = STEnvironment;
	    "-translateSelector:forReceiver:" = STEnvironment;
	};
	STFileScript = {
	    "+scriptWithFile:" = STFileScript;
	    "-compareByLocalizedName:" = STFileScript;
	    "-fileName" = STFileScript;
	    "-initWithFile:" = STFileScript;
	    "-localizedName" = STFileScript;
	    "-scriptDescription" = STFileScript;
	    "-scriptName" = STFileScript;
	};
	STLanguage = {
	    "+allKnownFileTypes" = STLanguage;
	    "+allLanguageNames" = STLanguage;
	    "+defaultLanguageName" = STLanguage;
	    "+languageForFileType:" = STLanguage;
	    "+languageNameForFileType:" = STLanguage;
	    "+languageWithName:" = STLanguage;
	    "+languageWithPath:" = STLanguage;
	    "-engine" = STLanguage;
	    "-languageName" = STLanguage;
	};
	STMethod = {
	    "-languageName" = STMethod;
	    "-methodName" = STMethod;
	    "-source" = STMethod;
	};
	STObjectReference = {
	    "-initWithObjectName:pool:" = STObjectReference;
	    "-object" = STObjectReference;
	    "-objectName" = STObjectReference;
	    "-pool" = STObjectReference;
	    "-setObject:" = STObjectReference;
	    "-setObjectName:" = STObjectReference;
	    "-setPool:" = STObjectReference;
	};
	STScript = {
	    "+scriptWithFile:" = STScript;
	    "+scriptWithSource:language:" = STScript;
	    "-compareByLocalizedName:" = STScript;
	    "-fileName" = STScript;
	    "-initWithFile:" = STScript;
	    "-initWithSource:language:" = STScript;
	    "-language" = STScript;
	    "-localizedName" = STScript;
	    "-scriptDescription" = STScript;
	    "-scriptName" = STScript;
	    "-setLanguage:" = STScript;
	    "-setSource:" = STScript;
	    "-source" = STScript;
	};
	STScriptObject = {
	    "+scriptObject" = STScriptObject;
	    "-addMethod:" = STScriptObject;
	    "-environment" = STScriptObject;
	    "-initWithInstanceVariableNames:" = STScriptObject;
	    "-instanceVariableNames" = STScriptObject;
	    "-methodDictionary" = STScriptObject;
	    "-methodNames" = STScriptObject;
	    "-methodWithName:" = STScriptObject;
	    "-objectForVariable:" = STScriptObject;
	    "-removeMethod:" = STScriptObject;
	    "-removeMethodWithName:" = STScriptObject;
	    "-setEnvironment:" = STScriptObject;
	    "-setObject:forVariable:" = STScriptObject;
	};
	STScriptsManager = {
	    "+defaultManager" = STScriptsManager;
	    "-allScripts" = STScriptsManager;
	    "-initWithDomainName:" = STScriptsManager;
	    "-scriptSearchPaths" = STScriptsManager;
	    "-scriptWithName:" = STScriptsManager;
	    "-scriptsDomainName" = STScriptsManager;
	    "-setScriptSearchPaths:" = STScriptsManager;
	    "-setScriptSearchPathsToDefaults" = STScriptsManager;
	    "-validScriptSearchPaths" = STScriptsManager;
	};
	STSelector = {
	    "-initWithName:" = STSelector;
	    "-initWithSelector:" = STSelector;
	    "-selectorName" = STSelector;
	    "-selectorValue" = STSelector;
	    "-stringValue" = STSelector;
	};
    };
    variable = {
	STGenericException = STExterns;
	STInternalInconsistencyException = STExterns;
	STInvalidArgumentException = STExterns;
	STLanguageBundleExtension = STExterns;
	STLanguageBundlesDirectory = STExterns;
	STLanguagesConfigFile = STExterns;
	STLibraryDirectory = STExterns;
	STMallocZone = STExterns;
	STModuleExtension = STExterns;
	STModulesDirectory = STExterns;
	STNil = STExterns;
	STScriptExtension = STExterns;
	STScriptingEnvironmentExtension = STExterns;
	STScriptingEnvironmentsDirectory = STExterns;
	STScriptingException = STExterns;
	STScriptsDirectory = STExterns;
    };
}