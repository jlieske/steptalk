StepTalk and STPalette integration notes for StepTalk 1.0

There are going to be three frameworks, two of them are new:
StepTalk.framework - core StepTalk
AppStepTalk.framework - StepTalk for applications - with views
StepTalkPrototyping.framework - StepTalk for fast prototyping of apps, no real
    application should be linked to this framework, it is only construction
    support

Not everything mentioned below should go to the StepTalk 1.0 release.

* STPalette 1.2 status:
- StepTalkClass should be replaced with STActor
- currently there are no traits, we have to live without them at the moment
- StepTalkMetadatas should be replaced by infoDictionary/userDictionary to
  STActor/STMethod 
- no need for StepTalkMethod - there is STMethod
- StepTalkRuntime - remove for this time (there should be similar class in the
  future)
- StepTalkView -> move to StepTalkPrototyping.framework

* StepTalk.framework
Required changes:
- add infoDictionary/userDictionary to STActor/STMethod (get functionality from rIO's StepTalkClass and StepTalkMethod)

* AppStepTalk.framework
- NSApplication setScriptingEnvironment:, scriptingEnvironment:
- STScriptEditorView (:NSTextEditor with associated language)
- STMethodEditorView (:STScriptEditorView)
- STActorEditor (NSBrowser with associated actor, can edit attributes and
methods)
- STTranscriptView (actions: removeContents:, -saveContentsToFile:(id)sender)
- STTranscriptPanel (make visible even app is not active)
- STEnvironmentInspectorView (NSTableView with given environment variables)

* StepTalkPrototyping.framework
- use StepTalkView - NSView with associated STActor, represented by an icon in
  Gorm design view

* StepTalkPalette
- Gorm objects: STActor, script
- STActor: definable outlets (attributes) as in StepTalkClass
- script - STActor with one method: 'interpret:' - no difference from implementation point of view, only simplification for the user
- abstract object: application scripting environment (for NSApplication), similar to font manager/first responder
- Require AppStepTalk.framework


* To be done in the near future:
- traits
